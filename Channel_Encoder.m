function encoderdata = Channel_Encoder(thz, input)

switch thz.ChannelCodingType
    % 无信道编码
    case 'None'
        encoderdata = input;

    % 卷积码
    case 'Convolutional'
        if thz.CodeRate == 7/8
            encoder = comm.ConvolutionalEncoder( ...
                'TrellisStructure', poly2trellis(7, [171 133]), ...
                'PuncturePatternSource', 'Property', ...
                'PuncturePattern', [1;1;0;1;0;1;0;1;1;0;0;1;1;0], ...
                'TerminationMethod', 'Continuous');
        elseif thz.CodeRate == 5/6
            encoder = comm.ConvolutionalEncoder( ...
                'TrellisStructure', poly2trellis(7, [171 133]), ...
                'PuncturePatternSource', 'Property', ...
                'PuncturePattern', [1;1;0;1;1;0;0;1;1;0], ...
                'TerminationMethod', 'Continuous');
        elseif thz.CodeRate == 3/4
            encoder = comm.ConvolutionalEncoder( ...
                'TrellisStructure', poly2trellis(7, [171 133]), ...
                'PuncturePatternSource', 'Property', ...
                'PuncturePattern', [1;1;0;1;1;0], ...
                'TerminationMethod', 'Continuous');
        elseif thz.CodeRate == 2/3
            encoder = comm.ConvolutionalEncoder( ...
                'TrellisStructure', poly2trellis(7, [171 133]), ...
                'PuncturePatternSource', 'Property', ...
                'PuncturePattern', [1;1;0;1], ...
                'TerminationMethod', 'Continuous');
        elseif thz.CodeRate == 1/2
            encoder = comm.ConvolutionalEncoder( ...
                'TrellisStructure', poly2trellis(7, [171 133]), ...
                'TerminationMethod', 'Continuous');
        elseif thz.CodeRate == 1/3
            encoder = comm.ConvolutionalEncoder( ...
                'TrellisStructure', poly2trellis(7, [133 171 165]), ...
                'TerminationMethod', 'Continuous');
        end
        
        encoderdata = encoder(input);

    % Turbo码
    case 'Turbo'
        if thz.CodeRate == 1/3
            encoder = comm.TurboEncoder( ...
                'TrellisStructure', poly2trellis(4, [13 15], 13), ...
                'InterleaverIndicesSource', 'Property', ...
                'InterleaverIndices', randperm(length(input)));
        else
            error('Turbo coding at the current code rate isn''t supported yet!');
        end
        
        encoderdata = encoder(input);

    otherwise
        error('This type of channel coding isn''t supported yet!');
end

end